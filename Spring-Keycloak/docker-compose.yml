version: '3.9'
services:
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: unless-stopped
    volumes:
      - /Users/duytc/Documents/Docker/Docker-data/Mysql-data:/var/lib/mysql
    environment:
      PGDATA: /data/postgres
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: duytc
    ports:
      - '5432:5432'
  keycloak:
    image: jboss/keycloak:latest
    container_name: keycloak
    restart: unless-stopped
    environment:
      DB_VENDOR: postgres
      DB_ADDR: postgres
      DB_PORT: 5432
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: duytc
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: duytc
      # KEYCLOAK_LOGLEVEL: DEBUG
      JGROUPS_DISCOVERY_PROTOCOL: JDBC_PING
      JGROUPS_DISCOVERY_PROPERTIES: datasource_jndi_name=java:jboss/datasources/KeycloakDS,info_writer_sleep_time=500,initialize_sql="CREATE TABLE IF NOT EXISTS JGROUPSPING ( own_addr varchar(200) NOT NULL, cluster_name varchar(200) NOT NULL, created timestamp default current_timestamp, ping_data BYTEA, constraint PK_JGROUPSPING PRIMARY KEY (own_addr, cluster_name))"
    ports:
      - '8080:8080'
    depends_on:
      - postgres
#    labels:
#      traefik.enable: true
#      traefik.port: 8080
#      traefik.protocol: http
#      traefik.frontend.rule: Host:localhost
#      traefik.frontend.passHostHeader: true

#  traefik:
#    image: library/traefik:alpine
#    container_name: traefik
#    restart: unless-stopped
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#    command: >
#      --logLevel=ERROR
#      --api.dashboard
#      --docker
#      --entrypoints="Name:http Address::80"
#      --defaultentrypoints="http"
#    ports:
#      - 80:80
#      - 3000:8080

volumes:
  postgres_data:
    driver: local
